@model BorrowedBook

@{
    ViewData["Title"] = "UpdateBorrowedBooks";
}

<b>Update your books:</b>


@using (Html.BeginForm("UpdateBorrowedBooks", "Booking", null, FormMethod.Post, null, null))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.BookId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BorrowDate, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.BorrowDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BorrowDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />Update
    </div>
}